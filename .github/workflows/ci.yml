# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: dough CI CD

on: push
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  gradle:
    name: Unit tests
    runs-on: ubuntu-20.04
    steps:
      - uses: getong/mariadb-action@v1.1
        with:
          mysql database: "doughnut_test"
          mysql user: ${{ secrets.DBUSER }}
          mysql password: ${{ secrets.DBPASSWORD }}
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: eskatos/gradle-command-action@v1
        with:
          build-root-directory: backend
          wrapper-directory: backend
          arguments: test
      - uses: adamkdean/simple-slack-notify@master
        if: always()
        with:
          channel: "#dough"
          status: ${{ job.status }}
          success_text: "dough CI Unit Tests (#${env.GITHUB_RUN_NUMBER}) completed successfully"
          failure_text: "dough CI Unit Tests (#${env.GITHUB_RUN_NUMBER}) failed"
          cancelled_text: "dough CI Unit Tests (#${env.GITHUB_RUN_NUMBER}) was cancelled"
          fields: |
            [{ "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]
   
  cypress-run:
    name: End-to-end tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: getong/mariadb-action@v1.1
        with:
          mysql database: "doughnut_test"
          mysql user: ${{ secrets.DBUSER }}
          mysql password: ${{ secrets.DBPASSWORD }}
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: cypress-io/github-action@v2
        with:
          install-command: yarn
          wait-on: "http://localhost:8081"
          start: yarn test
      - uses: adamkdean/simple-slack-notify@master
        if: always()
        with:
          channel: "#dough"
          status: ${{ job.status }}
          success_text: "dough CI E2E Tests (#${env.GITHUB_RUN_NUMBER}) completed successfully"
          failure_text: "dough CI E2E Tests (#${env.GITHUB_RUN_NUMBER}) failed"
          cancelled_text: "dough CI E2E Tests (#${env.GITHUB_RUN_NUMBER}) was cancelled"
          fields: |
            [{ "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]
