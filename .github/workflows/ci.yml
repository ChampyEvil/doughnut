# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: dough CI CD

on: push
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  ARTIFACT: "doughnut"
  VERSION: "0.0.1-SNAPSHOT"
  GCS_BUCKET: "dough-01"

jobs:
  unit-e2e-tests-run:
    name: Unit & E2E tests then Deploy with Healthcheck
    runs-on: ubuntu-20.04
    steps:
      - name: Setup & mariadb-server:10.4.17
        uses: getong/mariadb-action@v1.1
        with:
          mariadb version: '10.4.17'
          mysql database: 'doughnut_test'
          mysql user: ${{ secrets.DBUSER }}
          mysql password: ${{ secrets.DBPASSWORD }}
      - name: Installs MariaDB client libraries
        run: sudo apt-get update && sudo apt-get install -y -f libmariadb3 libmysqlclient21
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          architecture: x64
      - name: DB Migration unit test
        run: backend/gradlew -p backend testDBMigrate -Dspring.profiles.active=test
      - name: Unit tests with Gradle
        run: backend/gradlew -p backend test -Dspring.profiles.active=test
      - name: E2E tests with Cypress
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          headless: true
          config: pageLoadTimeout=100000,video=false
          install-command: yarn
          start: yarn sut
      - name: Build production application jar artifact
        run: backend/gradlew -p backend build -x test -Dspring.profiles.active=prod
      - name: Setup Google Cloud SDK with Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Upload production application jar to Google Cloud Storage
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: backend/build/libs/doughnut-0.0.1-SNAPSHOT.jar
          destination: dough-01/backend_app_jar
      - name: Create Google Cloud Compute VM doughnut-app instance
        run: backend/scripts/create-gcloud-app-compute.sh
      - name: Healthcheck doughnut-app instance
        run: backend/scripts/app-instance-healthcheck.sh
      - name: Slack notify dough channel of CI/CD results
        uses: adamkdean/simple-slack-notify@master
        if: always()
        with:
          channel: "#dough"
          status: ${{ job.status }}
          success_text: "dough CI Unit & E2E Tests (#${env.GITHUB_RUN_NUMBER}) completed successfully"
          failure_text: "dough CI Unit & E2E Tests (#${env.GITHUB_RUN_NUMBER}) failed"
          cancelled_text: "dough CI Unit & E2E Tests (#${env.GITHUB_RUN_NUMBER}) was cancelled"
          fields: |
            [{ "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]

